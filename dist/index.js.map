{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { Space } from \"@spatial-id/javascript-sdk\";\nimport fetch from \"cross-fetch\";\n\nimport type GeoJSON from \"geojson\";\n\n// A subset of the TileJSON specification\nexport type RequestSource = {\n  type: \"vector\";\n  tiles: string[];\n  minzoom?: number;\n  maxzoom?: number;\n} | {\n  type: \"vector\";\n  url: string;\n  minzoom?: number;\n  maxzoom?: number;\n};\n\nconst createTileUrl = (template: string, id: Space) => (\n  template\n    .replace('{z}', id.zfxy.z.toString())\n    .replace('{f}', id.zfxy.f.toString())\n    .replace('{x}', id.zfxy.x.toString())\n    .replace('{y}', id.zfxy.y.toString())\n)\n\ntype RequestToGeoJSON = (source: RequestSource, id: Space) => Promise<GeoJSON.FeatureCollection>;\n\nexport const requestToGeoJSON: RequestToGeoJSON = async (source, id) => {\n  let tilejson = source;\n  if (\"url\" in source) {\n    const response = await fetch(source.url);\n    tilejson = {\n      ...(await response.json()),\n      ...tilejson,\n    };\n  }\n  if (!(\"tiles\" in tilejson)) {\n    throw new Error(\"TileJSON must contain a 'tiles' property\");\n  }\n\n  const { tiles, minzoom: rawMinzoom, maxzoom } = tilejson;\n  const minzoom = rawMinzoom || 0;\n  if (minzoom !== undefined && id.zoom < minzoom) {\n    throw new Error(`Not implemented: zoom level of requested Spatial ID (${id.zoom}) is below minimum zoom ${minzoom}`);\n  }\n  const requestZoom = Math.min(maxzoom || 25, id.zoom);\n  const requestTile = id.parent(requestZoom);\n  const tileUrl = createTileUrl(tiles[0], requestTile);\n\n  const response = await fetch(tileUrl);\n  const data = await response.arrayBuffer();\n\n  // decode vector tile, transform to GeoJSON\n  // ...\n  // not implemented yet\n\n  return {\n    type: \"FeatureCollection\",\n    features: [],\n  };\n};\n"],"names":["fetch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAM,aAAa,GAAG,UAAC,QAAgB,EAAE,EAAS,EAAA,EAAK,QACrD,QAAQ;KACL,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;KACpC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;KACpC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EACxC,EAAA,CAAA;AAIY,IAAA,gBAAgB,GAAqB,UAAO,MAAM,EAAE,EAAE,EAAA,EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;gBAC7D,QAAQ,GAAG,MAAM,CAAC;AAClB,gBAAA,IAAA,EAAA,KAAK,IAAI,MAAM,CAAA,EAAf,OAAe,CAAA,CAAA,YAAA,CAAA,CAAA,CAAA;AACA,gBAAA,OAAA,CAAA,CAAA,YAAMA,yBAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,CAAA;;AAAlC,gBAAA,UAAA,GAAW,EAAuB,CAAA,IAAA,EAAA,CAAA;;AAElC,gBAAA,OAAA,CAAA,CAAA,YAAM,UAAQ,CAAC,IAAI,EAAE,CAAA,CAAA;;AAD3B,gBAAA,QAAQ,8DACF,EAAA,CAAA,IAAA,EAAqB,EACtB,CAAA,CAAA,EAAA,QAAQ,EACZ,CAAC;;;AAEJ,gBAAA,IAAI,EAAE,OAAO,IAAI,QAAQ,CAAC,EAAE;AAC1B,oBAAA,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AAC7D,iBAAA;AAEO,gBAAA,KAAK,GAAmC,QAAQ,CAA3C,KAAA,EAAW,UAAU,GAAc,QAAQ,CAAA,OAAtB,EAAE,OAAO,GAAK,QAAQ,QAAb,CAAc;AACnD,gBAAA,OAAO,GAAG,UAAU,IAAI,CAAC,CAAC;gBAChC,IAAI,OAAO,KAAK,SAAS,IAAI,EAAE,CAAC,IAAI,GAAG,OAAO,EAAE;oBAC9C,MAAM,IAAI,KAAK,CAAC,uDAAwD,CAAA,MAAA,CAAA,EAAE,CAAC,IAAI,EAA2B,0BAAA,CAAA,CAAA,MAAA,CAAA,OAAO,CAAE,CAAC,CAAC;AACtH,iBAAA;AACK,gBAAA,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;AAC/C,gBAAA,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBACrC,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AAEpC,gBAAA,OAAA,CAAA,CAAA,YAAMA,yBAAK,CAAC,OAAO,CAAC,CAAA,CAAA;;AAA/B,gBAAA,QAAQ,GAAG,EAAoB,CAAA,IAAA,EAAA,CAAA;AACxB,gBAAA,OAAA,CAAA,CAAA,YAAM,QAAQ,CAAC,WAAW,EAAE,CAAA,CAAA;;AAAnC,gBAAO,EAA4B,CAAA,IAAA,EAAA,CAAA;;;;gBAMzC,OAAO,CAAA,CAAA,aAAA;AACL,wBAAA,IAAI,EAAE,mBAAmB;AACzB,wBAAA,QAAQ,EAAE,EAAE;qBACb,CAAC,CAAA;;;;;;;"}